from gspread import Client, Spreadsheet, Worksheet, service_account
from config import token, table_id
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters.command import Command
from aiogram.types import FSInputFile, CallbackQuery
from keyboards import GiveAddUsersKeyboard
from aiogram.enums import ParseMode
import json
from aiogram import F
import loguru
import threading

bot = Bot(token=token, parse_mode = "HTML")

dp = Dispatcher()

ADMIN_ID = 684882717 #–∞–Ω—è
ADMIN_ID_2 = 1045401545 #—è
ADMIN_ID_3 = 362124322 #–Ω–∞—Å—Ç—è
neteloks_id = 1041729764

def client_init_json() -> Client:
	return service_account(filename='sowiicup-a7b6607dcc6b.json')

client = client_init_json()
table = client.open_by_key(table_id)
title = table.worksheets()[0].title
worksheet = table.worksheet(title)

@dp.message(Command("start"))
async def cmd_start(message: types.Message):
	if message.from_user.id == ADMIN_ID or message.from_user.id == ADMIN_ID_3:
		await message.answer(f"–ü—Ä–∏–≤–µ—Ç, –ê–¥–º–∏–Ω! @{message.from_user.username}", )
	else:
		await message.answer("–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å —Å–≤–æ—é –∞–Ω–∫–µ—Ç—É –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ —Ç—É—Ä–Ω–∏—Ä –ø–æ —Ñ–æ—Ä–º–∞—Ç—É –Ω–∞–∂–µ:\n\n1)–Ω–∏–∫ —Å —Ç–≤–∏—á–∞\n2)–∏–≥—Ä–æ–≤–æ–π –Ω–∏–∫\n3)–º–º—Ä(–∫–∞–∫ –Ω–∞ –≤–∞—à–µ–º —Å–∫—Ä–∏–Ω–µ)\n4)–∏–¥\n5) –ø–æ–∑–∏—Ü–∏—è\n6) –±—ã—Ç—å –∫—ç–ø–æ–º –¥–∞/–Ω–µ—Ç\n\n–ù–µ –∑–∞–±—É–¥—å –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç –º–º—Ä!!\n\n–ü–†–ò–ú–ï–† –ê–ù–ö–ï–¢–´:")
		await bot.send_photo(chat_id=message.from_user.id, photo=FSInputFile(f'images/example.jpg'), caption="1)mindluwa\n2)No Mercy\n3)14506\n4)1273483740\n5)4-5pos\n6)–¥–∞",)
		print(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.from_user.username} –Ω–∞–∂–∞–ª /start')

@dp.message()
async def sendmsg(message: types.Message):
	if message.from_user.id != ADMIN_ID and message.from_user.id != ADMIN_ID_3 :
		# print(message.caption)
		# print(len(message.caption.split('\n')))
		if message.caption != None:
			if len(message.caption.split('\n')) == 6:
				twitch = message.caption.split('\n')[0][2:].strip()
				dotaname = message.caption.split('\n')[1][2:].strip()
				mmr = message.caption.split('\n')[2][2:].strip()
				dotaid = message.caption.split('\n')[3][2:].strip()
				pos = message.caption.split('\n')[4][2:].strip()
				captain = message.caption.split('\n')[5][2:].strip()
				data = [twitch, dotaname, mmr, dotaid, pos, captain, f'https://ru.dotabuff.com/players/{dotaid}', '–Ω–µ—Ç']
				print(f'–ü–æ–ª—É—á–µ–Ω–∞ –∞–Ω–∫–µ—Ç–∞ –æ—Ç @{message.from_user.username} {message.from_user.id}')

				with open(f'players/forms/{message.from_user.id}.txt', 'w', encoding="utf-8") as file:
					file.writelines(f'{item}\n' for item in data)
					print(f'–î–∞–Ω–Ω—ã–µ –æ—Ç @{message.from_user.username} {message.from_user.id} –≤–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–º —Ñ–∞–π–ª–µ, –æ–∂–∏–¥–∞—é—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è')

				await message.bot.download(file=message.photo[-1].file_id,
										   destination=f'images/{message.from_user.id}.jpg')
				print(f'–§–æ—Ç–æ {message.from_user.id}.jpg —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ')

				await bot.send_photo(chat_id=ADMIN_ID_3, photo=message.photo[-1].file_id,
									 caption=f"1){twitch}\n2){dotaname}\n3){mmr}\n4){dotaid}\n5){pos}\n6){captain}\nhttps://ru.dotabuff.com/players/{dotaid}",
									 reply_markup=GiveAddUsersKeyboard(message.from_user.id))
				# await bot.send_photo(chat_id=ADMIN_ID_2, photo=message.photo[-1].file_id,
				# 					 caption=f"1){twitch}\n2){dotaname}\n3){mmr}\n4){dotaid}\n5){pos}\n6){captain}\nhttps://ru.dotabuff.com/players/{dotaid}",
				# 					 reply_markup=GiveAddUsersKeyboard(message.from_user.id))
				# await bot.send_photo(chat_id=ADMIN_ID, photo=message.photo[-1].file_id,
				# 					 caption=f"1){twitch}\n2){dotaname}\n3){mmr}\n4){dotaid}\n5){pos}\n6){captain}\nhttps://ru.dotabuff.com/players/{dotaid}",
				# 					 reply_markup=GiveAddUsersKeyboard(message.from_user.id))
				# await bot.send_photo(chat_id=1303013337, photo=message.photo[-1].file_id,
				# 					 caption=f"1){twitch}\n2){dotaname}\n3){mmr}\n4){dotaid}\n5){pos}\n6){captain}\nhttps://ru.dotabuff.com/players/{dotaid}",
				# 					 reply_markup=GiveAddUsersKeyboard(message.from_user.id))
				await message.answer('–∂–¥–∏ –ø–æ–∫–∞ –ø—Ä–∏–º—É—Ç')
			else:
				await message.answer('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∞–Ω–∫–µ—Ç—ã, –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞ –∏–ª–∏ –ø–æ–∂–∞–ª—É–π—Å—è –ê–Ω–µ')
		else:
			await message.answer('–ê–Ω–∫–µ—Ç–∞ –±–µ–∑ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞!')

@dp.callback_query(F.data.startswith('add_'))
async def cancel(call: CallbackQuery):
	user_id = call.data.replace('add_','')

	old_caption = call.message.caption
	caption = old_caption + f'\n\n‚úÖ–ü–†–ò–ù–Ø–¢–ê (@{call.from_user.username})'
	with open(f'players/forms/{user_id}.txt', 'r', encoding="utf-8") as file:
		data = file.readlines()
		data[:] = [item.strip() for item in data]

	worksheet.append_row(data)
	print(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≥—É–≥–ª —Ç–∞–±–ª–∏—Ü—É')

	await bot.send_message(user_id, '–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –ø—Ä–∏–Ω—è—Ç–∞!')
	await call.answer(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –¥–æ–±–∞–≤–ª–µ–Ω.', show_alert=True)
	await bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption = caption)

@dp.callback_query(F.data.startswith('noadd_'))
async def cancel(call: CallbackQuery):
	user_id = call.data.replace('noadd_','')
	old_caption = call.message.caption
	caption = old_caption + f'\n\nüö´–û–¢–ö–õ–û–ù–ï–ù–ê (@{call.from_user.username})'
	print(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –ù–ï –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≥—É–≥–ª —Ç–∞–±–ª–∏—Ü—É')
	await bot.send_message(user_id, '–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞!')
	await call.answer(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –æ—Ç–∫–ª–æ–Ω—ë–Ω.', show_alert=True)
	await bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption = caption)

@dp.callback_query(F.data.startswith('ban_'))
async def cancel(call: CallbackQuery):
	user_id = call.data.replace('ban_','')
	await bot.send_message(user_id, '–í—ã –∑–∞–±–∞–Ω–µ–Ω—ã! –ü–∏—à–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É')
	await call.answer(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–±–∞–Ω–µ–Ω.', show_alert=True)

async def main():
	await dp.start_polling(bot)

if __name__ == '__main__':
	client_init_json()
	asyncio.run(main())

# emoji="üé≤"