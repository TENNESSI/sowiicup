from gspread import Client, Spreadsheet, Worksheet, service_account
from numpy.lib.function_base import extract
import os
from config import token, table_id
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters.command import Command
from aiogram.types import FSInputFile, CallbackQuery
from keyboards import GiveAddUsersKeyboard
from aiogram.enums import ParseMode
import json
from aiogram import F
import loguru
import threading

bot = Bot(token=token, parse_mode = "HTML")

dp = Dispatcher()

ADMIN_ID = 684882717 #–∞–Ω—è
ADMIN_ID_2 = 1045401545 #—è
ADMIN_ID_3 = 362124322 #–Ω–∞—Å—Ç—è

def client_init_json() -> Client:
	return service_account(filename='sowiicup-a7b6607dcc6b.json')

client = client_init_json()
table = client.open_by_key(table_id)
title = table.worksheets()[0].title
worksheet = table.worksheet(title)

def is_banned(user_id):
	with open('players/banlist.txt', 'r') as file:
		banlist = file.readlines()
		banlist = [item.strip() for item in banlist]
	if str(user_id) in banlist:
		return True
	else:
		return False

@dp.message(Command("banlist"))
async def cmd_get_banlist(message: types.Message):
	if message.from_user.id == ADMIN_ID or message.from_user.id == ADMIN_ID_3:
		with open('players/banlist.txt', 'r') as file:
			banlist = file.readlines()
			banlist = [item.strip() for item in banlist]
		await message.answer('\n'.join(banlist))

@dp.message(Command("start"))
async def cmd_start(message: types.Message):
	if is_banned(message.from_user.id) == False:
		if message.from_user.id == ADMIN_ID or message.from_user.id == ADMIN_ID_3:
			await message.answer(f"–ü—Ä–∏–≤–µ—Ç, –ê–¥–º–∏–Ω! @{message.from_user.username}", )
		else:
			await message.answer("–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å —Å–≤–æ—é –∞–Ω–∫–µ—Ç—É –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ —Ç—É—Ä–Ω–∏—Ä –ø–æ —Ñ–æ—Ä–º–∞—Ç—É –Ω–∞–∂–µ:\n\n1)–Ω–∏–∫ —Å —Ç–≤–∏—á–∞\n2)–∏–≥—Ä–æ–≤–æ–π –Ω–∏–∫\n3)–º–º—Ä(–∫–∞–∫ –Ω–∞ –≤–∞—à–µ–º —Å–∫—Ä–∏–Ω–µ)\n4)–∏–¥\n5) –ø–æ–∑–∏—Ü–∏—è\n6) –±—ã—Ç—å –∫—ç–ø–æ–º –¥–∞/–Ω–µ—Ç\n\n–ù–µ –∑–∞–±—É–¥—å –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç –º–º—Ä!!\n\n–ü–†–ò–ú–ï–† –ê–ù–ö–ï–¢–´:")
			await bot.send_photo(chat_id=message.from_user.id, photo=FSInputFile(f'images/example.jpg'), caption="1)mindluwa\n2)No Mercy\n3)14506\n4)1273483740\n5)4-5pos\n6)–¥–∞",)
			print(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.from_user.username} –Ω–∞–∂–∞–ª /start')

@dp.message(Command("unban"))
async def cmd_start(message: types.Message):
	if message.from_user.id == ADMIN_ID or message.from_user.id == ADMIN_ID_3 or message.from_user.id == ADMIN_ID_2:
		if len(message.text.split(' '))==2:
			user_id = message.text.replace('/unban ', '')

			with open('players/banlist.txt', 'r') as file:
				old_banlist = file.readlines()
				old_banlist = [item.strip() for item in old_banlist]
			new_banlist = []
			if user_id in old_banlist:
				for i in old_banlist:
					if i != user_id:
						new_banlist.append(i)

				with open('players/banlist.txt', 'w') as file:
					for i in new_banlist:
						file.write(i+'\n')
				os.remove(f'players/forms/{user_id}.txt')

				await message.answer(f"—Ä–∞–∑–±–∞–Ω–µ–Ω {user_id}", )
			else:
				await message.answer(f'{user_id} –Ω–µ –∑–∞–±–∞–Ω–µ–Ω')

@dp.message()
async def sendmsg(message: types.Message):
	if is_banned(message.from_user.id) == False:
		if message.from_user.id != ADMIN_ID and message.from_user.id != ADMIN_ID_3 :
			if worksheet.find(str(message.from_user.id)) != None:
				await message.answer('–¢–≤–æ—è –∞–Ω–∫–µ—Ç–∞ —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞')
			else:
				if os.path.isfile(f'players/forms/{message.from_user.id}.txt') == True:
					await message.answer('–¢–≤–æ—è –∞–Ω–∫–µ—Ç–∞ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ! –ó–∞ —Å–ø–∞–º –º–æ–∂–Ω–æ –æ—Ç–ª–µ—Ç–µ—Ç—å –≤ –±–∞–Ω.')
				else:
					if message.caption != None:
						if len(message.caption.split('\n')) == 6:
							twitch = message.caption.split('\n')[0][2:].strip()
							dotaname = message.caption.split('\n')[1][2:].strip()
							mmr = message.caption.split('\n')[2][2:].strip()
							dotaid = message.caption.split('\n')[3][2:].strip()
							pos = message.caption.split('\n')[4][2:].strip()
							captain = message.caption.split('\n')[5][2:].strip()
							data = [twitch, dotaname, mmr, dotaid, pos, captain, f'https://ru.dotabuff.com/players/{dotaid}', '–Ω–µ—Ç', str(message.from_user.id)]
							print(f'–ü–æ–ª—É—á–µ–Ω–∞ –∞–Ω–∫–µ—Ç–∞ –æ—Ç @{message.from_user.username} {message.from_user.id}')

							with open(f'players/forms/{message.from_user.id}.txt', 'w', encoding="utf-8") as file:
								file.writelines(f'{item}\n' for item in data)
								print(f'–î–∞–Ω–Ω—ã–µ –æ—Ç @{message.from_user.username} {message.from_user.id} –≤–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–º —Ñ–∞–π–ª–µ, –æ–∂–∏–¥–∞—é—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è')

							await message.bot.download(file=message.photo[-1].file_id,
													   destination=f'images/{message.from_user.id}.jpg')
							print(f'–§–æ—Ç–æ {message.from_user.id}.jpg —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ')

							msg_ids = []
							chat_ids = []

							msg = await bot.send_photo(chat_id=ADMIN_ID_3, photo=message.photo[-1].file_id,
												 caption=f"1){twitch}\n2){dotaname}\n3){mmr}\n4){dotaid}\n5){pos}\n6){captain}\nhttps://ru.dotabuff.com/players/{dotaid}",
												 reply_markup=GiveAddUsersKeyboard(message.from_user.id))
							msg_ids.append(msg.message_id)
							chat_ids.append(str(ADMIN_ID_3))

							# msg = await bot.send_photo(chat_id=ADMIN_ID_2, photo=message.photo[-1].file_id,
							# 					 caption=f"1){twitch}\n2){dotaname}\n3){mmr}\n4){dotaid}\n5){pos}\n6){captain}\nhttps://ru.dotabuff.com/players/{dotaid}",
							# 					 reply_markup=GiveAddUsersKeyboard(message.from_user.id))
							# msg_ids.append(msg.message_id)
							# chat_ids.append(str(ADMIN_ID_2))

							# msg = await bot.send_photo(chat_id=ADMIN_ID, photo=message.photo[-1].file_id,
							# 					 caption=f"1){twitch}\n2){dotaname}\n3){mmr}\n4){dotaid}\n5){pos}\n6){captain}\nhttps://ru.dotabuff.com/players/{dotaid}",
							# 					 reply_markup=GiveAddUsersKeyboard(message.from_user.id))
							# msg_ids.append(msg.message_id)
							# chat_ids.append(str(ADMIN_ID))

							with open(f'players/forms/{message.from_user.id}.txt', 'a', encoding="utf-8") as file:
								file.write('_'.join([str(i) for i in msg_ids])+"\n")
								file.write('_'.join(chat_ids))

							await message.answer('–∂–¥–∏ –ø–æ–∫–∞ –ø—Ä–∏–º—É—Ç')
						else:
							await message.answer('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∞–Ω–∫–µ—Ç—ã, –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞ –∏–ª–∏ –ø–æ–∂–∞–ª—É–π—Å—è –ê–Ω–µ')
					else:
						await message.answer('–ê–Ω–∫–µ—Ç–∞ –±–µ–∑ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞!')
#–∫–Ω–æ–ø–∫–∞ –ø—Ä–∏–Ω—è—Ç—å –∞–Ω–∫–µ—Ç—É
@dp.callback_query(F.data.startswith('add_'))
async def cancel(call: CallbackQuery):
	user_id = call.data.replace('add_','')

	old_caption = call.message.caption
	caption = old_caption + f'\n\n‚úÖ–ü–†–ò–ù–Ø–¢–ê (@{call.from_user.username})'

	with open(f'players/forms/{user_id}.txt', 'r', encoding="utf-8") as file:
		data = file.readlines()
		data[:] = [item.strip() for item in data]
	chat_ids = [int(i) for i in data[-1].split('_')]
	msg_ids = [int(i) for i in data[-2].split('_')]

	worksheet.append_row(data[:-2])
	print(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≥—É–≥–ª —Ç–∞–±–ª–∏—Ü—É')

	await bot.send_message(user_id, '–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –ø—Ä–∏–Ω—è—Ç–∞!')
	await call.answer(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –¥–æ–±–∞–≤–ª–µ–Ω.', show_alert=True)
	for i in range(len(chat_ids)):
		await bot.edit_message_caption(chat_id=chat_ids[i], message_id=msg_ids[i], caption = caption)
#–∫–Ω–æ–ø–∫–∞ –æ—Ç–∫–ª–æ–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É
@dp.callback_query(F.data.startswith('noadd_'))
async def cancel(call: CallbackQuery):
	user_id = call.data.replace('noadd_','')
	old_caption = call.message.caption
	caption = old_caption + f'\n\nüö´–û–¢–ö–õ–û–ù–ï–ù–ê (@{call.from_user.username})'

	with open(f'players/forms/{user_id}.txt', 'r', encoding="utf-8") as file:
		data = file.readlines()
		data[:] = [item.strip() for item in data]
	chat_ids = [int(i) for i in data[-1].split('_')]
	msg_ids = [int(i) for i in data[-2].split('_')]

	print(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –ù–ï –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≥—É–≥–ª —Ç–∞–±–ª–∏—Ü—É')
	await bot.send_message(user_id, '–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞!')
	await call.answer(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –æ—Ç–∫–ª–æ–Ω—ë–Ω.', show_alert=True)
	for i in range(len(chat_ids)):
		await bot.edit_message_caption(chat_id=chat_ids[i], message_id=msg_ids[i], caption = caption)

@dp.callback_query(F.data.startswith('ban_'))
async def cancel(call: CallbackQuery):
	user_id = call.data.replace('ban_','')
	old_caption = call.message.caption
	caption = old_caption + f'\n\n–ë–ê–ù–ë–ê–ù–ë–ê–ù–ë–ê–ù (@{call.from_user.username})'

	with open(f'players/banlist.txt', 'a') as file:
		file.write(user_id+'\n')

	with open(f'players/forms/{user_id}.txt', 'r', encoding="utf-8") as file:
		data = file.readlines()
		data[:] = [item.strip() for item in data]
	chat_ids = [int(i) for i in data[-1].split('_')]
	msg_ids = [int(i) for i in data[-2].split('_')]

	await bot.send_message(user_id, '–í—ã –∑–∞–±–∞–Ω–µ–Ω—ã! –ü–∏—à–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É')
	await call.answer(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–±–∞–Ω–µ–Ω.', show_alert=True)
	for i in range(len(chat_ids)):
		await bot.edit_message_caption(chat_id=chat_ids[i], message_id=msg_ids[i], caption = caption)

async def main():
	await dp.start_polling(bot)

if __name__ == '__main__':
	client_init_json()
	asyncio.run(main())

# emoji="üé≤"